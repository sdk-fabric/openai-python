"""
completion_request automatically generated by SDKgen please do not edit this file manually
https://sdkgen.app
"""

from pydantic import BaseModel, Field, GetCoreSchemaHandler, Tag
from pydantic_core import CoreSchema, core_schema
from typing import Any, Dict, Generic, List, Optional, TypeVar, Annotated, Union
from .completion_message import CompletionMessage


class CompletionRequest(BaseModel):
    model: Optional[str] = Field(default=None, alias="model")
    messages: Optional[List[CompletionMessage]] = Field(default=None, alias="messages")
    frequency_penalty: Optional[float] = Field(default=None, alias="frequency_penalty")
    logit_bias: Optional[Dict[str, int]] = Field(default=None, alias="logit_bias")
    logprobs: Optional[bool] = Field(default=None, alias="logprobs")
    max_completion_tokens: Optional[int] = Field(default=None, alias="max_completion_tokens")
    metadata: Optional[Dict[str, str]] = Field(default=None, alias="metadata")
    presence_penalty: Optional[float] = Field(default=None, alias="presence_penalty")
    reasoning_effort: Optional[str] = Field(default=None, alias="reasoning_effort")
    seed: Optional[int] = Field(default=None, alias="seed")
    service_tier: Optional[str] = Field(default=None, alias="service_tier")
    stop: Optional[List[str]] = Field(default=None, alias="stop")
    store: Optional[bool] = Field(default=None, alias="store")
    temperature: Optional[float] = Field(default=None, alias="temperature")
    top_logprobs: Optional[int] = Field(default=None, alias="top_logprobs")
    top_p: Optional[float] = Field(default=None, alias="top_p")
    user: Optional[str] = Field(default=None, alias="user")
    pass


